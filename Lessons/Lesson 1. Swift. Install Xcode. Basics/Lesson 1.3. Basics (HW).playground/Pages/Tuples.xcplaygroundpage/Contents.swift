/*:
 ## Tuples (Кортежи)
 */
//:
/*:
 **Кортежи** группируют несколько значений в одно составное значение. Значения внутри кортежа могут быть любого типа.
 

 Например, модель данных `(404, "Not Found")` - это кортеж, который описывает код `HTTP` статуса. Код `HTTP` статуса — особое значение, возвращаемое веб-сервером каждый раз, когда вы запрашиваете веб-страницу. Код статуса `404 Not Found` возвращается, когда API запрашивает несуществующую страницу.
 */
//:
import Foundation

let http404Error = (404, "Not Found")
//:
//: Чтобы передать код статуса, кортеж `(404, "Not Found")` группирует вместе два отдельных значения `Int` и `String`: число и понятное человеку описание. Это может быть описано как **"кортеж типа (Int, String)"**.
//:
//: Вы можете создать кортеж с любой расстановкой типов и они могут содержать сколько угодно нужных вам типов. Ничто вам не мешает иметь кортеж типа `(Int, Int, Int)` или типа `(String, Bool)` или же с любой другой расстановкой типов по вашему желанию.
//:
//: Вы можете разложить содержимое кортежа на отдельные константы и переменные, к которым можно получить доступ привычным способом:
//:
let (statusCode, statusMessage) = http404Error

print("The status code is \(statusCode)")
print("The status message is \(statusMessage)")
//:
//: Если вам нужно только некоторые из значений кортежа, вы можете игнорировать части кортежа во время разложения с помощью символа подчеркивания (`_`):
//:
let (justTheStatusCode, _) = http404Error

print("The status code is \(justTheStatusCode)")
//:
//: В качестве альтернативы можно получать доступ к отдельным частям кортежа, используя числовые индексы, начинающиеся с нуля:
//:
print("The status code is \(http404Error.0)")
print("The status message is \(http404Error.1)")
//:
//: Вы можете давать имена отдельным элементам кортежа во время объявления:
//:
let http200Status = (statusCode: 200, description: "OK")
//:
//: Когда вы присвоили имя элементу кортежа, вы можете обратиться к нему по этому имени:
//:
print("The status code is \(http200Status.statusCode)")
print("The status message is \(http200Status.description)")
//:
//: Кортежи особенно полезны в качестве возвращаемых значений функций. Функция, которая пытается получить веб-страницу, может вернуть кортеж типа `(Int, String)`, чтобы описать успех или неудачу при поиске страницы. Функция, возращающая результат в виде кортежа с двумя отдельными значениями разного типа предоставляет разработчику более полезную информацию чем та, которая возвращает одно единственное значение определенного типа.
/*:
 * note:
 Кортежи полезны для временной группировки связанных значений. Они не подходят для создания сложных структур данных. В случае, если ваша модель данных будет выходить за рамки временного хранения вместо кортежей лучше использовать классы или структуры.
 */
//:
/*:
 
 */
//: [Booleans](@previous) | [Optionals](@next)
