//
//  DeleteOrderConfigurator.swift
//  CleanStoreTest
//
//  Created by msm72 on 05.08.16.
//  Copyright (c) 2016 Monastyrskiy Sergey. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: Connect View, Interactor, and Presenter

extension DeleteOrderViewController: DeleteOrderPresenterOutput
{
  override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?)
  {
    router.passDataToNextScene(segue)
  }
}

extension DeleteOrderInteractor: DeleteOrderViewControllerOutput
{
}

extension DeleteOrderPresenter: DeleteOrderInteractorOutput
{
}

class DeleteOrderConfigurator
{
  // MARK: Object lifecycle
  
  class var sharedInstance: DeleteOrderConfigurator
  {
    struct Static {
      static var instance: DeleteOrderConfigurator?
      static var token: dispatch_once_t = 0
    }
    
    dispatch_once(&Static.token) {
      Static.instance = DeleteOrderConfigurator()
    }
    
    return Static.instance!
  }
  
  // MARK: Configuration
  
  func configure(viewController: DeleteOrderViewController)
  {
    let router = DeleteOrderRouter()
    router.viewController = viewController
    
    let presenter = DeleteOrderPresenter()
    presenter.output = viewController
    
    let interactor = DeleteOrderInteractor()
    interactor.output = presenter
    
    viewController.output = interactor
    viewController.router = router
  }
}
