/*: ## Lesson Plan (План лекции) */
//:
/*:
 1. Generics (Универсальные шаблоны)
    1. The Problem That Generics Solve (Проблема, которую решают универсальные шаблоны)
    2. Generic Functions (Универсальные функции)
    3. Type Parameters (Параметры типа)
    4. Naming Type Parameters (Именование параметров типа)
    5. Extending a Generic Type (Расширяем универсальный тип)
    6. Type Constraints (Ограничения типа)
        1. Type Constraint Syntax (Синтаксис ограничения типа)
        2. Type Constraints in Action (Ограничение типа в действии)
    7. Associated Types (Связанные типы)
        1. Associated Types in Action (Связанные типы в действии)
        2. Extending an Existing Type to Specify an Associated Type (Расширение существующего типа для указания связанного типа)
    8. Where Clauses (Оговорка where)
 
 
 2. Access Control (Контроль доступа)
    1. Modules and Source Files (Модули и исходные файлы)
    2. Access Levels (Уровни доступа)
        1. Guiding Principle of Access Levels (Руководящий принцип по выбору уровня доступа)
        2. Default Access Levels (Уровень доступа по умолчанию (дефолтный))
        3. Access Levels for Single-Target Apps (Уровень доступа для простых однозадачных приложений)
        4. Access Levels for Frameworks (Уровень доступа для фреймворка)
        5. Access Levels for Unit Test Targets (Уровни доступа для модуля поэлементного тестирования (Unit Test Targets))
    3. Access Control Syntax (Синтаксис уровня контроля)
    4. Custom Types (Контроль доступа к пользовательским типам)
        1. Tuple Types (Кортежи типов)
        2. Function Types (Типы функций)
        3. Enumeration Types (Типы перечислений)
        4. Raw Values and Associated Values (Сырые значения и связанные значения)
        5. Nested Types (Вложенные типы)
    5. Subclassing (Уровни доступа к классам и подклассам)
    6. Constants, Variables, Properties, and Subscripts (Контроль доступа к константам, переменным, свойствам и сабскриптам)
        1. Getters and Setters (Геттеры и сеттеры)
    7. Initializers (Уровень доступа к инициализаторам)
        1. Default Initializers (Дефолтные инициализаторы)
        2. Default Memberwise Initializers for Structure Types (Дефолтные почленные инициализаторы для типов структур)
    8. Protocols (Контроль доступа к протоколам)
        1. Protocol Inheritance (Наследование протокола)
        2. Protocol Conformance (Соответствие протоколу)
    9. Extensions (Контроль доступа к расширениям)
        1. Adding Protocol Conformance with an Extension (Добавление соответствия протоколу)
    10. Generics (Контроль доступа к универсальным шаблонам)
    11. Type Aliases (Контроль доступа к псевдонимам)

 
 3. Advanced Operators (Продвинутые операторы)
    1. Bitwise Operators (Побитовые операторы)
        1. Bitwise NOT Operator (Побитовый оператор NOT)
        2. Bitwise AND Operator (Побитовый оператор AND)
        3. Bitwise OR Operator (Побитовый оператор OR)
        4. Bitwise XOR Operator (Побитовый оператор XOR)
        5. Bitwise Left and Right Shift Operators (Операторы побитового левого и правого сдвига)
        6. Shifting Behavior for Signed Integers (Поведение сдвига для беззнаковых целых чисел)
    2. Overflow Operators (Операторы переполнения)
        1. Value Overflow (Переполнение значения)
    3. Precedence and Associativity (Приоритет и ассоциативность)
    4. Operator Functions (Операторные функции)
        1. Prefix and Postfix Operators (Префиксные и постфиксные операторы)
        2. Compound Assignment Operators (Составные операторы присваивания)
        3. Equivalence Operators (Операторы эквивалентности)
    5. Custom Operators (Пользовательские операторы)
        1. Precedence and Associativity for Custom Infix Operators (Приоритет и ассоциативность для пользовательских инфиксных операторов)
 
 */
 
