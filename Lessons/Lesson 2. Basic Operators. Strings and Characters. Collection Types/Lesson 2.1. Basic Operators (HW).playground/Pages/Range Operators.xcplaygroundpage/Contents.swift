/*: ## Range Operators (Операторы диапазона) */
//:
//: В языке `Swift` есть два *оператора диапазона*, которые в короткой форме задают диапазон значений.
/*:
 
*/
//: ### Closed Range Operator (Оператор закрытого диапазона)
//: **Оператор закрытого диапазона** `(a...b)` задает диапазон от `a` до `b`, включая сами `a` и `b`. При этом значение `a` не должно превышать `b`.
//:
//: Оператор закрытого диапазона удобно использовать при последовательном переборе значений из некоторого диапазона, например, в цикле `for-in`:
//:
import Foundation

for index in 1...5 {
    print("\(index) times 5 is \(index * 5)")
}
//:
//: Более подробно циклы `for-in` мы рассмотрим на уроке **Управление потоком**.
//:
/*:
 
 */
//: ### Half-Open Range Operator (Оператор полуоткрытого диапазона)
//: **Оператор полуоткрытого диапазона** `(a..<b)` задает диапазон от `a` до `b`, исключая значение `b`. Такой диапазон называется полуоткрытым, потому что он включает первое значение, но исключает последнее. Так же, как и для оператора закрытого диапазона, значение `a` не должно превышать `b`.
//:
//: Оператор полуоткрытого диапазона особенно удобны при работе с массивами и другими последовательностями, пронумерованными с нуля, когда нужно перебрать элементы с первого до последнего:
//:
let names = ["Anna", "Alex", "Brian", "Jack"]
let count = names.count

for i in 0..<count {
    print("Person \(i + 1) is called \(names[i])")
}
//:
/*:
 * note:
 Обратите внимание, что массив содержит четыре элемента, но диапазон `0..<count` заканчивается на числе `3` (индекс последнего элемента массива), потому что это *полуоткрытый диапазон*. Более подробно массивы мы рассмотрим на уроке **Массивы**.
*/
//:
//:
/*:
 
*/
//: [Nil Coalescing Operator](@previous) | [Examples. Range Operators](@next)
