/*: # Basic Operators (Базовые операторы) */
//:
/*:
 `Оператор` — это специальный символ или выражение для проверки, изменения или сложения величин. Например, оператор сложения `(+)` суммирует два числа `let i = 1 + 2`, оператор `логическое И` (`&&`) сочетает два булевых значения `if enteredDoorCode && passedRetinaScan`.


 Язык `Swift` поддерживает большинство стандартных операторов `C`, а также ряд возможностей для устранения типичных ошибок в коде. Оператор присваивания `(=)` не возвращает значение, что позволяет избежать путаницы с оператором проверки на равенство `(==)`. Арифметические операторы `(+)`, `(-)`, `(*)`, `(/)`, `(%)` и т.д. могут обнаруживать и предотвращать переполнение типа, чтобы числовой переменной нельзя было присвоить слишком большое или слишком маленькое значение. Контроль переполнения типа включается в `Swift` специальными операторами, которые описаны в разделе `Операторы переполнения`


 В отличие от `C` язык `Swift` позволяет делить с остатком `(%)` числа с плавающей запятой. Также в `Swift` имеются два сокращенных оператора интервала `(a..<b)` и `(a...b)`, которых нет в `C`.

 В этой главе описываются стандартные операторы `Swift`. Более сложные операторы `Swift` рассмотрены в главе `Продвинутые операторы`. В ней описано, как объявить пользовательские операторы и реализовать стандартные операторы для пользовательских типов.
 */
//:
/*: */
//: [Terminology](@next)
