/*: ## Strings Are Value Types (Строка является типом значения) */
//:
//: Тип `String` в `Swift` является типом значения. Когда вы создаёте новое `String` значение (в момент его передачи в функцию или метод, а также в момент инициализации константы или переменной) оно копируется. В каждом случае создается, передается ил присваивается новая копия существующего `String` значения, а не его исходная версия. Типы значений будут рассмотрены на уроке **Структуры и перечисления**.
//:
//: В языке `Swift` подход *"копировать по умолчанию"* для типа `String` позволяет быть уверенным в том, что когда вы передаете функции либо методу `String` значение, то очевидно, что вы работаете с его копией независимо от того, откуда она пришла. Вы можете быть уверены, что переданная вам  строка не будет модифицирована, если только вы сами ее не модифицируете.
//:
//: Компилятор `Swift` оптимизирует использование строк, так что фактическое копирование строк происходит только тогда, когда оно действительно необходимо. Это означает, что вы всегда получаете высокую производительность при работе со строками, как с типами значений.
//:
/*: */
//: [String Mutability](@previous) | [Working with Characters](@next)
