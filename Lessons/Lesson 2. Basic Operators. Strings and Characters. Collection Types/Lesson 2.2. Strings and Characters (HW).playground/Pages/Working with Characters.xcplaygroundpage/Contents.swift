/*: ## Working with Characters (–†–∞–±–æ—Ç–∞ —Å —Å–∏–º–≤–æ–ª–∞–º–∏) */
//:
//: –í —è–∑—ã–∫–µ `Swift` —Ç–∏–ø `String` –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –∑–Ω–∞—á–µ–Ω–∏–π `Character`. –í —Å—Ç—Ä–æ–∫–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –æ—Ç–¥–µ–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º `Character` –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∏—Ç–µ—Ä–∞—Ü–∏–π –≤ —Ü–∏–∫–ª–µ `for-in`:
//:
import Foundation

for character in "Dog!üê∂".characters {
    print(character)
}
//:
//: –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ —Ü–∏–∫–ª `for-in` –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —É—Ä–æ–∫–µ `For-In —Ü–∏–∫–ª—ã`.
//:
//: –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é `Character` –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏–∑ –æ–¥–Ω–æ—Å–∏–º–≤–æ–ª—å–Ω–æ–≥–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞ —Å –ø–æ–º–æ—â—å—é –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è —Ç–∏–ø–∞ `Character`:
//:
let exclamationMark: Character = "!"
//:
//: –ó–Ω–∞—á–µ–Ω–∏—è —Ç–∏–ø–∞ `String` –º–æ–≥—É—Ç –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω—ã –ø—É—Ç–µ–º –ø–µ—Ä–µ–¥–∞—á–∏ –º–∞—Å—Å–∏–≤–∞ —Ç–∏–ø–∞ `[Character]` –≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ç–æ—Ä:
//:
let catCharacters: [Character] = ["C", "a", "t", "!", "üê±"]
let catString = String(catCharacters)

print(catString)
//:
/*: */
//: [Strings Are Value Types](@previous) | [Concatenating Strings and Characters](@next)
